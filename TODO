State of packages and modules: Code Tests Comments

telegram                OK OK OK
virtualpump             -- -- --
ui                      -- -- --
bin                     -- -- --
test_turboctl           -- -- --   
    
TODO:
- Add a __str__ method to TelgramReader. It should print the contants of the
  telegram in a human-readable form that can be used for debugging.
- Add a property to TelegramReader.parameter_mode that returns the description
  string of the parameter enum member. parameter_mode is still used by
  VirtualPump, so it cannot be removed.
- TelegramBuilder should have a set_error_code method or another way of setting
  the error code. It should also accept invalid parameter numbers, if
  error_mode is 'none' or 'error'.
- ParameterException objects need a 'MEMBER' attribute, which links to the
  corresponding ParameterError member.
- The min_value, max_value and default fields of Parameter should take values
  as Data subclasses, not builtins. Default should always be a list, even if
  the parameter is unindexed.
- Parameters should be an attribute and an optional initializer argument
  for TelegramBuilder and TelegramReader.
- Document individual enum members in codes.py?
- Pump errors could be tested by adding a raise_error method to virtualpump.
  E.g. vpump.raise_error(type='power_failure').
- Everything that can be private should probably be private.


Might be useful:
- Change setup methods to setupclass methods in some tests in order 
  to make them faster
- Try mock objects (unittest.mock)

Things that have to be tested with the real pump:
- When are different status bits reported?
  What do the different control bits do?
- If a parameter number is specified but there is no parameter access, 
  will the parameter data be included in the return telegram?
- Is it OK to define an index when accessing an unindexed parameter?
- When is the "cannot change" error message used?
- What is the writability of parameters for which the manual doesn't specify 
  it?
- Does the pump return a parameter error if the parameter access code is 
  invalid?
- How does the pump behave when it is off? Is only the motor off? Does the 
  pump read/answer commands?
- Does the onoff command reset parameters?
- Real parameters have a default value of 0 and a minumum value of > 0. 
  How does this work?
- What happens if the frequency setpoint is set to an illegal value through 
  the setpoint command (without accessing parameters)?
- Should an invalid parameter index raise a parameter number error or 
  other error (currently VPump raises a parameter number error)?
- What is the hierarchy of parameter errors? If there are multiple things
  wrong with a telegram, which error is returned?
- Do volatile values disappear when the pump is turned off, or only when power is cut off.
- Does parameter 227 (warnings) work analogously compared to parameter 171 (error list).
